{"version":3,"file":"angular-material-fileupload.js","sources":["angular-material-fileupload/lib/bytes/bytes.pipe.ts","angular-material-fileupload/lib/mat-file-upload-queue/mat-file-upload-queue.service.ts","angular-material-fileupload/lib/mat-file-upload/mat-file-upload.component.ts","angular-material-fileupload/lib/mat-file-upload-queue/mat-file-upload-queue.component.ts","angular-material-fileupload/lib/file-upload-input-for/file-upload-input-for.directive.ts","angular-material-fileupload/lib/mat-file-upload.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'bytes'})\nexport class BytesPipe implements PipeTransform {\n  public transform(bytes: number): string {\n    if (isNaN(parseFloat('' + bytes)) || !isFinite(bytes)) return '-';\n    if (bytes <= 0 ) return '0';\n    var units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB'],\n        number = Math.floor(Math.log(bytes) / Math.log(1024));\n    return (bytes / Math.pow(1024, Math.floor(number))).toFixed(1) +  ' ' + units[number];\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IInput } from \"../mat-file-upload.type\";\n\n@Injectable()\nexport class MatFileUploadQueueService {\n  private inputValueSubject = new BehaviorSubject<IInput>(null);\n  inputValue$ = this.inputValueSubject.asObservable();\n\n  initialize(input: IInput) {\n    this.inputValueSubject.next(input);\n  }\n\n  getInputValue() {\n    return this.inputValueSubject.getValue();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { ReplaySubject, BehaviorSubject, Subscription } from \"rxjs\";\nimport {\n  HttpHeaders,\n  HttpParams,\n  HttpClient,\n  HttpEventType,\n} from \"@angular/common/http\";\nimport { MatFileUploadQueueService } from \"../mat-file-upload-queue/mat-file-upload-queue.service\";\nimport { IUploadProgress } from \"../mat-file-upload.type\";\n\n@Component({\n  selector: \"mat-file-upload\",\n  templateUrl: \"./mat-file-upload.component.html\",\n  styleUrls: [\"./mat-file-upload.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatFileUploadComponent implements OnInit, OnDestroy {\n  private uploadProgressSubject = new ReplaySubject<IUploadProgress>();\n  uploadProgress$ = this.uploadProgressSubject.asObservable();\n\n  private uploadInProgressSubject = new BehaviorSubject<boolean>(false);\n  uploadInProgress$ = this.uploadInProgressSubject.asObservable();\n\n  public subs = new Subscription();\n\n  /* Http request input bindings */\n  @Input()\n  httpUrl: string;\n\n  @Input()\n  httpRequestHeaders:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n\n  @Input()\n  httpRequestParams:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      };\n\n  @Input()\n  fileAlias: string;\n\n  private _file: any;\n  private _id: number;\n\n  @Input()\n  get file(): any {\n    return this._file;\n  }\n  set file(file: any) {\n    this._file = file;\n  }\n\n  @Input()\n  set id(id: number) {\n    this._id = id;\n  }\n  get id(): number {\n    return this._id;\n  }\n\n  @Input()\n  fileUploadAriaLabel = \"File Upload\";\n\n  @Input()\n  cancelAriaLabel = \"Cancel File Upload\";\n\n  /** Output  */\n  @Output() removeEvent = new EventEmitter<MatFileUploadComponent>();\n  @Output() onUpload = new EventEmitter();\n\n  private fileUploadSubscription: any;\n\n  constructor(\n    private HttpClient: HttpClient,\n    private matFileUploadQueueService: MatFileUploadQueueService\n  ) {\n    const queueInput = this.matFileUploadQueueService.getInputValue();\n    if (queueInput) {\n      this.httpUrl = this.httpUrl || queueInput.httpUrl;\n      this.httpRequestHeaders =\n        this.httpRequestHeaders || queueInput.httpRequestHeaders;\n      this.httpRequestParams =\n        this.httpRequestParams || queueInput.httpRequestParams;\n      this.fileAlias = this.fileAlias || queueInput.fileAlias;\n    }\n  }\n\n  ngOnInit() {\n    this.uploadProgressSubject.next({\n      progressPercentage: 0,\n      loaded: 0,\n      total: this._file.size,\n    });\n  }\n\n  public upload(): void {\n    this.uploadInProgressSubject.next(true);\n    // How to set the alias?\n    let formData = new FormData();\n    formData.set(this.fileAlias, this._file, this._file.name);\n    this.subs.add(\n      this.HttpClient.post(this.httpUrl, formData, {\n        headers: this.httpRequestHeaders,\n        observe: \"events\",\n        params: this.httpRequestParams,\n        reportProgress: true,\n        responseType: \"json\",\n      }).subscribe(\n        (event: any) => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.uploadProgressSubject.next({\n              progressPercentage: Math.floor(\n                (event.loaded * 100) / event.total\n              ),\n              loaded: event.loaded,\n              total: event.total,\n            });\n          }\n          this.onUpload.emit({ file: this._file, event: event });\n        },\n        (error: any) => {\n          if (this.fileUploadSubscription) {\n            this.fileUploadSubscription.unsubscribe();\n          }\n          this.uploadInProgressSubject.next(false);\n          this.onUpload.emit({ file: this._file, event: event });\n        },\n        () => this.uploadInProgressSubject.next(false)\n      )\n    );\n  }\n\n  public remove(): void {\n    this.subs.unsubscribe();\n    this.removeEvent.emit(this);\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  forwardRef,\n  OnDestroy,\n  OnChanges,\n  QueryList,\n  SimpleChanges,\n  Input,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { Subscription, Observable, merge } from \"rxjs\";\nimport { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { startWith } from \"rxjs/operators\";\nimport { MatFileUploadQueueService } from \"./mat-file-upload-queue.service\";\nimport { MatFileUploadComponent } from \"../mat-file-upload/mat-file-upload.component\";\n\n@Component({\n  selector: \"mat-file-upload-queue\",\n  templateUrl: \"./mat-file-upload-queue.component.html\",\n  styleUrls: [\"./mat-file-upload-queue.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MatFileUploadQueueService],\n})\nexport class MatFileUploadQueueComponent implements OnChanges, OnDestroy {\n  @ContentChildren(forwardRef(() => MatFileUploadComponent))\n  fileUploads: QueryList<MatFileUploadComponent>;\n\n  /** Subscription to remove changes in files. */\n  private _fileRemoveSubscription: Subscription | null;\n\n  /** Subscription to changes in the files. */\n  private _changeSubscription: Subscription;\n\n  /** Combined stream of all of the file upload remove change events. */\n  get fileUploadRemoveEvents(): Observable<MatFileUploadComponent> {\n    return merge(\n      ...this.fileUploads.map((fileUpload) => fileUpload.removeEvent)\n    );\n  }\n\n  public files: Array<any> = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.matFileUploadQueueService.initialize({\n      httpUrl: changes[\"httpUrl\"] ? changes[\"httpUrl\"].currentValue : undefined,\n      httpRequestHeaders: changes[\"httpRequestHeaders\"]\n        ? changes[\"httpRequestHeaders\"].currentValue\n        : undefined,\n      httpRequestParams: changes[\"httpRequestParams\"]\n        ? changes[\"httpRequestParams\"].currentValue\n        : undefined,\n      fileAlias: changes[\"fileAlias\"]\n        ? changes[\"fileAlias\"].currentValue\n        : undefined,\n    });\n  }\n\n  constructor(\n    private matFileUploadQueueService: MatFileUploadQueueService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  /* Http request input bindings */\n  @Input()\n  httpUrl: string;\n\n  @Input()\n  httpRequestHeaders:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      } = new HttpHeaders();\n\n  @Input()\n  httpRequestParams:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      } = new HttpParams();\n\n  @Input()\n  fileAlias: string = \"file\";\n\n  @Input()\n  uploadAllColor = \"primary\";\n\n  @Input()\n  uploadAllLabel = \"Upload All\";\n\n  @Input()\n  removeAllColor = \"primary\";\n\n  @Input()\n  removeAllLabel = \"Remove All\";\n\n  ngAfterViewInit() {\n    // When the list changes, re-subscribe\n    this._changeSubscription = this.fileUploads.changes\n      .pipe(startWith(null))\n      .subscribe(() => {\n        if (this._fileRemoveSubscription) {\n          this._fileRemoveSubscription.unsubscribe();\n        }\n        this._listenTofileRemoved();\n      });\n  }\n\n  private _listenTofileRemoved(): void {\n    this._fileRemoveSubscription = this.fileUploadRemoveEvents.subscribe(\n      (event: MatFileUploadComponent) => {\n        this.files.splice(event.id, 1);\n        this.changeDetectorRef.markForCheck();\n      }\n    );\n  }\n\n  add(file: any) {\n    this.files.push(file);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  public uploadAll() {\n    this.fileUploads.forEach((fileUpload) => {\n      fileUpload.upload();\n    });\n  }\n\n  public removeAll() {\n    this.files.splice(0, this.files.length);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy() {\n    if (this._changeSubscription) this._changeSubscription.unsubscribe();\n    if (this._fileRemoveSubscription)\n      this._fileRemoveSubscription.unsubscribe();\n\n    if (this.files) {\n      this.removeAll();\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n} from \"@angular/core\";\n\n/**\n * A material design file upload queue component.\n */\n@Directive({\n  selector: \"input[fileUploadInputFor], div[fileUploadInputFor]\",\n})\nexport class FileUploadInputForDirective {\n  private _queue: any = null;\n  private _element: HTMLElement;\n  @Output() public onFileSelected: EventEmitter<File[]> = new EventEmitter<\n    File[]\n  >();\n\n  constructor(private element: ElementRef) {\n    this._element = this.element.nativeElement;\n  }\n\n  @Input(\"fileUploadInputFor\")\n  set fileUploadQueue(value: any) {\n    if (value) {\n      this._queue = value;\n    }\n  }\n\n  @HostListener(\"change\")\n  public onChange(): any {\n    let files = this.element.nativeElement.files;\n    this.onFileSelected.emit(files);\n\n    for (var i = 0; i < files.length; i++) {\n      this._queue.add(files[i]);\n    }\n    this.element.nativeElement.value = \"\";\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  public onDrop(event: any): any {\n    let files = event.dataTransfer.files;\n    this.onFileSelected.emit(files);\n\n    for (var i = 0; i < files.length; i++) {\n      this._queue.add(files[i]);\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.element.nativeElement.value = \"\";\n  }\n\n  @HostListener(\"dragover\", [\"$event\"])\n  public onDropOver(event: any): any {\n    event.preventDefault();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { BytesPipe } from \"./bytes/bytes.pipe\";\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatFileUploadQueueComponent } from \"./mat-file-upload-queue/mat-file-upload-queue.component\";\nimport { MatFileUploadComponent } from \"./mat-file-upload/mat-file-upload.component\";\nimport { FileUploadInputForDirective } from \"./file-upload-input-for/file-upload-input-for.directive\";\n\n@NgModule({\n  declarations: [\n    BytesPipe,\n    MatFileUploadQueueComponent,\n    MatFileUploadComponent,\n    FileUploadInputForDirective,\n  ],\n  imports: [\n    MatProgressBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  exports: [\n    BytesPipe,\n    MatFileUploadQueueComponent,\n    MatFileUploadComponent,\n    FileUploadInputForDirective,\n  ],\n})\nexport class MatFileUploadModule {}\n"]}